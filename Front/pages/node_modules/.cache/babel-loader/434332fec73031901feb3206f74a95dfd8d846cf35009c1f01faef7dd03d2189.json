{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\home\\\\Desktop\\\\Building-calculator-main\\\\Front\\\\pages\\\\src\\\\components\\\\RegistrationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/RegistrationPage.css'; // Подключаем CSS файл \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RegistrationPage() {\n  _s();\n  const [lastName, setLastName] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [middleName, setMiddleName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [address, setAddress] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isRegistered, setIsRegistered] = useState(false); // Добавлено состояние для отслеживания успешной регистрации\n\n  const handleRegistration = event => {\n    event.preventDefault();\n\n    // Проверка Фамилии\n    if (!/^[\\u0410-\\u042f\\u0430-\\u044f]+$/u.test(lastName)) {\n      setError('Фамилия должна быть написана на русском одним словом');\n      return;\n    }\n\n    // Проверка Имени\n    if (!/^[\\u0410-\\u042f\\u0430-\\u044f]+$/u.test(firstName)) {\n      setError('Имя должно быть написано на русском одним словом');\n      return;\n    }\n\n    // Проверка Email\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setError('Email должен быть в формате example@mail.com');\n      return;\n    }\n\n    // Проверка Телефона\n    if (!/^79\\d{9}$/.test(phone)) {\n      setError('Телефон должен начинаться с 79 и содержать 11 цифр');\n      return;\n    }\n\n    // Проверка Пароля\n    if (!/^\\d{6}$/.test(password)) {\n      setError('Пароль должен состоять из 6 цифр');\n      return;\n    }\n\n    // Проверка наличия заполнения всех полей\n    if (!lastName || !firstName || !email || !phone || !address || !password) {\n      setError('Необходимо заполнить все поля');\n      return;\n    }\n\n    // Ваша логика регистрации\n    // Здесь можно отправить данные на сервер или сохранить их локально, в зависимости от вашего приложения\n\n    // После успешной регистрации сбрасываем состояния и выводим сообщение об успешной регистрации\n    setIsRegistered(true);\n    setLastName('');\n    setFirstName('');\n    setMiddleName('');\n    setPhone('');\n    setEmail('');\n    setAddress('');\n    setPassword('');\n    setError('');\n  };\n  const getInputClass = inputValue => {\n    return !inputValue ? 'input error' : 'input';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleRegistration,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"\\u0420\\u0415\\u0413\\u0418\\u0421\\u0422\\u0420\\u0410\\u0426\\u0418\\u042F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), isRegistered ?\n      /*#__PURE__*/\n      // Если успешно зарегистрирован, отображаем сообщение об успешной регистрации\n      _jsxDEV(\"p\", {\n        className: \"success\",\n        children: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u044B!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: getInputClass(lastName),\n            type: \"text\",\n            value: lastName,\n            onChange: e => {\n              setError('');\n              setLastName(e.target.value);\n            },\n            placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0444\\u0430\\u043C\\u0438\\u043B\\u0438\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), !lastName && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: \"\\u041F\\u043E\\u043B\\u0435 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0443\\u0441\\u0442\\u044B\\u043C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }, this), !isRegistered && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"button\",\n        type: \"submit\",\n        value: \"\\u0420\\u0415\\u0413\\u0418\\u0421\\u0422\\u0420\\u0410\\u0426\\u0418\\u042F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(RegistrationPage, \"Jm1R0OOHtx56kzQgBVckupSKoU0=\");\n_c = RegistrationPage;\nexport default RegistrationPage;\nvar _c;\n$RefreshReg$(_c, \"RegistrationPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RegistrationPage","_s","lastName","setLastName","firstName","setFirstName","middleName","setMiddleName","phone","setPhone","email","setEmail","address","setAddress","password","setPassword","error","setError","isRegistered","setIsRegistered","handleRegistration","event","preventDefault","test","getInputClass","inputValue","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/home/Desktop/Building-calculator-main/Front/pages/src/components/RegistrationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './css/RegistrationPage.css'; // Подключаем CSS файл \r\n\r\nfunction RegistrationPage() {\r\n  const [lastName, setLastName] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [middleName, setMiddleName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [address, setAddress] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isRegistered, setIsRegistered] = useState(false); // Добавлено состояние для отслеживания успешной регистрации\r\n\r\n  const handleRegistration = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Проверка Фамилии\r\n    if (!/^[\\u0410-\\u042f\\u0430-\\u044f]+$/u.test(lastName)) {\r\n      setError('Фамилия должна быть написана на русском одним словом');\r\n      return;\r\n    }\r\n\r\n    // Проверка Имени\r\n    if (!/^[\\u0410-\\u042f\\u0430-\\u044f]+$/u.test(firstName)) {\r\n      setError('Имя должно быть написано на русском одним словом');\r\n      return;\r\n    }\r\n\r\n    // Проверка Email\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\r\n      setError('Email должен быть в формате example@mail.com');\r\n      return;\r\n    }\r\n\r\n    // Проверка Телефона\r\n    if (!/^79\\d{9}$/.test(phone)) {\r\n      setError('Телефон должен начинаться с 79 и содержать 11 цифр');\r\n      return;\r\n    }\r\n\r\n    // Проверка Пароля\r\n    if (!/^\\d{6}$/.test(password)) {\r\n      setError('Пароль должен состоять из 6 цифр');\r\n      return;\r\n    }\r\n\r\n    // Проверка наличия заполнения всех полей\r\n    if (!lastName || !firstName || !email || !phone || !address || !password) {\r\n      setError('Необходимо заполнить все поля');\r\n      return;\r\n    }\r\n\r\n    // Ваша логика регистрации\r\n    // Здесь можно отправить данные на сервер или сохранить их локально, в зависимости от вашего приложения\r\n\r\n    // После успешной регистрации сбрасываем состояния и выводим сообщение об успешной регистрации\r\n    setIsRegistered(true);\r\n    setLastName('');\r\n    setFirstName('');\r\n    setMiddleName('');\r\n    setPhone('');\r\n    setEmail('');\r\n    setAddress('');\r\n    setPassword('');\r\n    setError('');\r\n  };\r\n\r\n  const getInputClass = (inputValue) => {\r\n    return !inputValue ? 'input error' : 'input';\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form className=\"form\" onSubmit={handleRegistration}>\r\n        <h2 className=\"title\">РЕГИСТРАЦИЯ</h2>\r\n        {isRegistered ? ( // Если успешно зарегистрирован, отображаем сообщение об успешной регистрации\r\n          <p className=\"success\">Вы успешно зарегистрированы!</p>\r\n        ) : (\r\n          <>\r\n            <div className=\"input-container\">\r\n              <label>Фамилия:</label>\r\n              <input\r\n                className={getInputClass(lastName)}\r\n                type=\"text\"\r\n                value={lastName}\r\n                onChange={(e) => { setError(''); setLastName(e.target.value); }}\r\n                placeholder=\"Введите фамилию\"\r\n              />\r\n              {!lastName && <p className=\"error\">Поле не может быть пустым</p>}\r\n            </div>\r\n            {/* Остальные поля ввода */}\r\n          </>\r\n        )}\r\n        {error && <p className=\"error\">{error}</p>}\r\n        {!isRegistered && <input className=\"button\" type=\"submit\" value=\"РЕГИСТРАЦИЯ\" />}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
import React, { useState } from 'react';
import { useParams } from 'react-router-dom';
import './css/ClientPage.css'; // –ü–æ–¥–∫–ª—é—á–∞–µ–º CSS —Ñ–∞–π–ª
import './css/Dva.css';

function ClientPage() {
  const { clientId } = useParams();
  const [calculations, setCalculations] = useState([]);
  const client = { name: '–¢–µ—Å—Ç–æ–≤—ã–π –¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤', address: '—É–ª.–¢–µ—Å—Ç–æ–≤–∞—è —É–ª., –¥–æ–º 43-45', phone: '—Ç–µ–ª. 8-900-000-00-00' };

  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedOption, setSelectedOption] = useState('');

  const handleCreateCalculation = () => {
    setIsModalOpen(true);
  };

  const handleOptionSelect = (option) => {
    setSelectedOption(option);
    setIsModalOpen(false);
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫—É–¥–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–ø—Ü–∏–∏
    switch (option) {
      case '—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç':
        window.location.href = '/frame-page'; // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞
        break;
      case '–∫–∞—Ä–∫–∞—Å':
        window.location.href = '/calculation-page';
        break;
      case '–∫—Ä—ã—à–∞':
        window.location.href = '/page5';
        break;
      default:
        break;
    }
  };

  const handleCloseModal = () => {
    setIsModalOpen(false);
  };

  const handleGoBack = () => {
    window.location.href = '/page1';
  };

  const handleClose = () => {
    window.location.href = '/page1';
  };

  const handleAddCalculation = () => {
    const newCalculation = {
      number: calculations.length + 1,
      date: new Date().toLocaleDateString(),
      status: '–ê–∫—Ç—É–∞–ª–µ–Ω',
      address: '–ê–¥—Ä–µ—Å —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞'
    };
    setCalculations([...calculations, newCalculation]);
  };

  return (
    <div className="container">
      <div className="name">
        <h1>{client.name}</h1>
        <p>{client.address}</p>
        <p>{client.phone}</p>
      </div>
      <button className="close-button" onClick={() => window.location.href = '/'}>X</button>
      <div className="form">
        <h2 className="title">–ö–ª–∏–µ–Ω—Ç—ã</h2>
        <button className="button action-button" onClick={handleCreateCalculation}>–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—á–µ—Ç</button>
        {isModalOpen && (
          <div className="modal-overlay">
            <div className="modal">
              <div className="button-container">
                <button className="button calculation-option" onClick={() => handleOptionSelect('—Ñ—É–Ω–¥–∞–º–µ–Ω—Ç')}>–§—É–Ω–¥–∞–º–µ–Ω—Ç</button>
                <button className="button calculation-option" onClick={() => handleOptionSelect('–∫–∞—Ä–∫–∞—Å')}>–ö–∞—Ä–∫–∞—Å</button>
                <button className="button calculation-option" onClick={() => handleOptionSelect('–∫—Ä—ã—à–∞')}>–ö—Ä—ã—à–∞</button>
                <button className="button close-button2" onClick={handleCloseModal}>–ó–∞–∫—Ä—ã—Ç—å</button>
              </div>
            </div>
          </div>
        )}
        {calculations.map((calculation, index) => (
          <div className="calculation" key={index}>
            <div>–†–∞—Å—á–µ—Ç ‚Ññ{calculation.number}</div>
            <div>{calculation.date}</div>c
            <div>{calculation.status}</div>
            <div>{calculation.address}</div>
            <div>
              <button>üóëÔ∏è</button>
              <button>üìã</button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default ClientPage;

import React, { useState } from 'react';
import { useParams } from 'react-router-dom';
import styled from 'styled-components';

const Container = styled.div`
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #282c34;
`;

const Form = styled.div`
  display: flex;
  flex-direction: column;
  width: 500px;
  padding: 20px;
  border-radius: 5px;
  background-color: white;
  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.75);
`;

const Title = styled.h2`
  text-align: center;
  color: #282c34;
`;

const Button = styled.button`
  padding: 10px 10px;
  border-radius: 5px;
  border: none;
  background-color: #007bff;
  color: white;
  cursor: pointer;
  transition: background-color 0.3s ease;
  margin-right: 10px;

  &:hover {
    background-color: #0056b3;
  }
`;

const Name = styled.div`
  position: absolute;
  top: 10px;
  left: 30px;
  background: none;
  color: white;
  border: none;
  font-size: 14px;
`;

const CloseButton = styled.button`
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  color: white;
  border: none;
  font-size: 24px;
  transition: color 0.3s ease;

  &:hover {
    color: #007bff;
  }
`;

const Calculation = styled.div`
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding: 10px;
  border-bottom: 1px solid #ccc;
`;

const AddressInput = styled.input`
  flex: 1;
  padding: 10px;
  margin-right: 10px;
  border-radius: 5px;
  border: 1px solid #ccc;
`;

const InputRow = styled.div`
  display: flex;
  align-items: center;
  margin-bottom: 10px;
`;

const Select = styled.select`
  padding: 10px;
  border-radius: 5px;
  border: 1px solid #ccc;
`;

const Label = styled.label`
  min-width: 150px;
  text-align: right;
  margin-right: 20px;
`;

function RoofPage() {
  const [address, setAddress] = useState('');
  const [roofType, setRoofType] = useState('');
  const [roofMaterial, setRoofMaterial] = useState('');
  const [insulationMaterial, setInsulationMaterial] = useState('');
  const [insulationThickness, setInsulationThickness] = useState('');
  const [hasOpenings, setHasOpenings] = useState('');
  const { clientId } = useParams();
  const [calculations, setCalculations] = useState([]);
  const client = { name: '–¢–µ—Å—Ç–æ–≤—ã–π –¢–µ—Å—Ç –¢–µ—Å—Ç–æ–≤', address: '—É–ª.–¢–µ—Å—Ç–æ–≤–∞—è —É–ª., –¥–æ–º 43-45', phone: '—Ç–µ–ª. 8-900-000-00-00' };

  const handleSave = () => {
    if (address.trim() !== '' && roofType && roofMaterial && insulationMaterial && insulationThickness && hasOpenings) {
      const newCalculation = {
        number: calculations.length + 1,
        date: new Date().toLocaleDateString(),
        status: '–ê–∫—Ç—É–∞–ª–µ–Ω',
        address,
        roofType,
        roofMaterial,
        insulationMaterial,
        insulationThickness,
        hasOpenings
      };
      setCalculations([...calculations, newCalculation]);
      setAddress('');
      setRoofType('');
      setRoofMaterial('');
      setInsulationMaterial('');
      setInsulationThickness('');
      setHasOpenings('');
    }
  };

  const handleClear = () => {
    setAddress('');
    setRoofType('');
    setRoofMaterial('');
    setInsulationMaterial('');
    setInsulationThickness('');
    setHasOpenings('');
  };

  const handleClose = () => {
    window.location.href = '/';
  };

  return (
    <Container>
      <Name>
        <h1>{client.name}</h1>
        <p>{client.address}</p>
        <p>{client.phone}</p>
      </Name>
      <CloseButton onClick={handleClose}>X</CloseButton>
      <Form>
        <Title>–ö—Ä—ã—à–∞</Title>
        <div style={{ display: 'flex', marginBottom: '10px' }}>
          <AddressInput
            type="text"
            placeholder="–î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–∞"
            value={address}
            onChange={(e) => setAddress(e.target.value)}
          />
          <Button onClick={handleSave}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</Button>
          <Button onClick={handleClear}>–û—á–∏—Å—Ç–∏—Ç—å</Button>
        </div>
        <InputRow>
          <Label>–¢–∏–ø –∫—Ä—ã—à–∏:</Label>
          <Select value={roofType} onChange={(e) => setRoofType(e.target.value)}>
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫—Ä—ã—à–∏</option>
            <option value="–ø–ª–æ—Å–∫–∞—è">–ü–ª–æ—Å–∫–∞—è</option>
            <option value="—Å–∫–∞—Ç–Ω–∞—è">–°–∫–∞—Ç–Ω–∞—è</option>
            <option value="—à–∞—Ç—Ä–æ–≤–∞—è">–®–∞—Ç—Ä–æ–≤–∞—è</option>
          </Select>
        </InputRow>
        <InputRow>
          <Label>–ú–∞—Ç–µ—Ä–∏–∞–ª –∫—Ä–æ–≤–ª–∏:</Label>
          <Select value={roofMaterial} onChange={(e) => setRoofMaterial(e.target.value)}>
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª –∫—Ä–æ–≤–ª–∏</option>
            <option value="—á–µ—Ä–µ–ø–∏—Ü–∞">–ß–µ—Ä–µ–ø–∏—Ü–∞</option>
            <option value="–º–µ—Ç–∞–ª–ª–æ—á–µ—Ä–µ–ø–∏—Ü–∞">–ú–µ—Ç–∞–ª–ª–æ—á–µ—Ä–µ–ø–∏—Ü–∞</option>
            <option value="–æ–Ω–¥—É–ª–∏–Ω">–û–Ω–¥—É–ª–∏–Ω</option>
          </Select>
        </InputRow>
        <InputRow>
          <Label>–£—Ç–µ–ø–ª–∏—Ç–µ–ª—å:</Label>
          <Select value={insulationMaterial} onChange={(e) => setInsulationMaterial(e.target.value)}>
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —É—Ç–µ–ø–ª–∏—Ç–µ–ª—å</option>
            <option value="–ø–µ–Ω–æ–ø–æ–ª–∏—Å—Ç–∏—Ä–æ–ª">–ü–µ–Ω–æ–ø–æ–ª–∏—Å—Ç–∏—Ä–æ–ª</option>
            <option value="–ø–µ–Ω–æ–ø–ª–µ–∫—Å">–ü–µ–Ω–æ–ø–ª–µ–∫—Å</option>
            <option value="–º–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –≤–∞—Ç–∞">–ú–∏–Ω–µ—Ä–∞–ª—å–Ω–∞—è –≤–∞—Ç–∞</option>
          </Select>
        </InputRow>
        <InputRow>
          <Label>–¢–æ–ª—â–∏–Ω–∞ —É—Ç–µ–ø–ª–∏—Ç–µ–ª—è:</Label>
          <input type="number" value={insulationThickness} onChange={(e) => setInsulationThickness(e.target.value)} />
        </InputRow>
        <InputRow>
          <Label>–ü—Ä–æ–µ–º—ã:</Label>
          <Select value={hasOpenings} onChange={(e) => setHasOpenings(e.target.value)}>
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ–µ–º–æ–≤</option>
            <option value="–µ—Å—Ç—å">–ï—Å—Ç—å</option>
            <option value="–Ω–µ—Ç">–ù–µ—Ç</option>
          </Select>
        </InputRow>
        {calculations.map((calculation, index) => (
          <Calculation key={index}>
            <div>–†–∞—Å—á–µ—Ç ‚Ññ{calculation.number}</div>
            <div>{calculation.date}</div>
            <div>{calculation.status}</div>
            <div>{calculation.address}</div>
            <div>
              <button>üóëÔ∏è</button>
              <button>üìã</button>
            </div>
          </Calculation>
        ))}
        <Button onClick={handleSave}>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞—Å—á–µ—Ç</Button>
      </Form>
    </Container>
  );
}

export default RoofPage;
